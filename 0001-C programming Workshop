Hey!, Thanks for browsing! Note: for better searching make sure to visit: https://nimeshshrestha.great-site.net/ , and https://nimeshshrestha.com.np/ NOW ALL SET, ENJOY !!! 



//  1. WAP in C programming to display the sum of two number.
#include<stdio.h>
int main(){
int num1 , num2 , sum;
printf(“Enter first number : “):
scanf(“%d”,&num1);
printf(“Enter second number : “);
scanf(“%d”,&num2);
sum = num1 + num2;
printf(“The sum is %d”, sum);
return 0;
}

// 2. WAP in C programming to calculate the area of rectangle.

#include<stdio.h>
int main(){
int length , breadth , area;
printf(“Enter length and breadth : “);
scanf(“%d%d”, &length, &breadth);
area = length * breadth ;
printf(“The area of rectangle is %d”, area);
return 0;
}

// 3. WAP in C programming to calculate simple interest.

#include<stdio.h>
int main(){
int principal ;
float time , rate , si ;
printf(“Enter principal , time & rate : “);
scanf(“%d%f%f”,&principal , &time , &rate);
si = principal * time * rate / 100;
printf(“The Simple interest  is %.2f”, si);
return 0;
}

// 4. WAP in C programming to check whether the number is prime or composite.

#include<stdio.h>
int main(){
int num , i , c = 0;
printf(“Enter number for checkup : “);
scanf(“%d”, &num);
for(i=1;i<=num;i++)
{
if(num % i ==0)
c++;
}
if(c==2)
printf(“The number is prime “);
else
printf(“The number is composite”);
return 0;
}

// 5. WAP to display the fibonacci series : 1 1 2 3 5 8 . . . . . upto nth term

#include<stdio.h>
int main(){
int num , a=1, b=0 , c ,i;
printf(“Enter the limit term : “);
scanf(“%d” , &num);
for(i=1;i<=num;i++)
{
c = a + b;
printf(“%d\t” , c);
a = b;
b = c;
}
return 0;
}

// 6. WAP to input the limit & find the greatest no. among ‘n’ numbers.

#include<stdio.h>
int main(){
int num, i ,limit;
int max =0;
printf(“Enter the limit :”);
scanf(“%d”,&limit);
for(i=1; i<=limit ;i++)
{
printf(“Enter number %d: “,i);
scanf(“%d”,&num);
if(num > max)
{
max = num;
}
}
printf(“Greatest number is %d”, max);
return 0;
}

// 7. WAP to display the multiplication table of any inputted number using function.

#include<stdio.h>
int main(){
int num , i;
printf(“Enter number : “);
scanf(“%d”, &num);
for(i=1;i<=10;i++)
{
printf(“%dX%d=%d\n” , num , i , num*i);
}
return 0;
}

With using function

#include<stdio.h>
int table(int num , int i)
{
return num * i;
}
int main(){
int num,i ;
printf(“Enter number : “);
scanf(“%d”, &num);
int find = table(num,i);
for(i=1;i<=10;i++)
{
printf(“%dX%d=%d\n”, num, i, table(num,i);
}
return 0;
}

// 8.  WAP to check whether the inputed no. is positive , negative or zero.

#include<stdio.h>
int main(){
int num;
printf(“Enter number : “);
scanf(“%d”, &num);
if(num > 0)
printf(“Positive”);
else if(num < 0)
printf(“Negative”);
else
printf(“Zero”);
return 0;
}

// 9. WAP to check whether the no. is palindrome or not.

#include<stdio.h>
int main(){
int num , r , c , s=0;
printf(“Enter number : “);
scanf(“%d”, &num);
c = num;
while(num > 0)
{
r = num % 10;
s = r + (s*10);
num = num / 10;
}
if(c==s)
printf(“Palindrome”);
else
printf(“Not”);
return 0;
}

// 10. WAP to input any two numbers and find the L.C.M & H.C.F .

#include<stdio.h>
int main(){
int num1, num2, l , h , i;
printf(“Enter two number : “);
scanf(“%d%d”, &num1, &num2);
for(i=num1 ; i>=1; i- -)
{
if(num1 % i ==0 && num2 % i==0)
  {
h = i;
break;
  }
}
l = (num1*num2)/h;
printf(“H.C.F is %d\n”, h);
printf(“L.C.M is %d\n”, l);
return 0;
}

// 11. WAP to find the greatest among three numbers using function.

#include<stdio.h>

int main(){
int a , b, c ;
printf(“Enter three integer : “);
scanf(“%d%d%d”,&a, &b, &c);
int max = a;
if(b > max){
max = b;
}
if(c > max){
max = c;
}
printf(“Greatest no: %d”, max);
return 0;
}

OR,

#include<stdio.h>
int main(){
int a, b, c;
printf(“Enter three integer: “);
scanf(“%d%d%d”, &a , &b, &c);
if(a>b && a>c)
printf(“Greatest no. is %d\n”, a);
else if(b>a && b>c)
printf(“Grestest no. is %d\n”, b);
else if(c>a && c>b)
printf(“Grestest no. is %d\n”, c);
else
printf(“All are equal”);
return 0;
}

// 12. WAP to define a function whether the number is prime or composite.

#include<stdio.h>
int check(int num){
int i , c=0;
for(i=1;i<=num;i++)
 {
if(num % i == 0)
c++;
 }
return c==2;
}
int main(){
int num;
printf(“Enter number : “);
scanf(“%d” , &num);
int find = check(num);
if(find)
printf(“Prime”);
else
printf(“Composite”);
return 0;
}

// 13. WAP using structure to input 10 student’s roll , name , age and address & display it in appropriate format.

#include<stdio.h>
struct student{
int roll , age;
char nam[30] , add[25];
} n[10];
int main(){
int i;
// Input operation
printf(“Enter 10 different student’s roll , name , age and address : \n”);
for(i=0; i<10;i++)
  {
printf(“Student’s no. : %d\n”,i+1);
printf(“Student’s roll : “);
scanf(“%d”, &n[i].roll);
printf(“Student’s name : “);
scanf(“%s” , n[i].nam);
printf(“Student’s age : “);
scanf(“%d”, &n[i].age);
printf(“Student’s address : “);
scanf(“%d”, &n[i].add);
  }
// Now time to display contents
for(i=0;i<10;i++)
{
printf(“Student no. : “);
printf(“Student’s roll : %d\n”, n[i].roll);
printf(“Student’s name : %d\n” , n[i].nam);
printf(“Student’s age : %d\n” , n[i].age);
printf(“Student’s address : %d\n”, n[i].add);
}
return 0;
}

// 14. WAP using user-defined function to calculate the y raise to power x.

#include<stdio.h>
#include<math.h> 
int main(){
int x , y ;
printf(“Enter base number : \n”);
scanf(“%d”, &y);
printf(“Enter exponent number : \n”);
scanf(“%d”, &x);
int power = pow(y , x);
printf(“The result is %d”,power);
return 0;
}

/* 15. Write a program to read N students record store them in data file and display the content in 
appropriate format by using fprintf and fscanf function.  */

#include<stdio.h>

int main(){
int num , i , roll ,age;
char nam[30];
FILE *fptr;
fptr = fopen(“student.txt”, “w”);
printf(“How many student’s detail ? \n”);
scanf(“%d”,&num);
printf(“Enter %d student’s roll , name & age : \n”,num);
for(i=0;i<num;i++){
printf(“Student no: %d\n”,i+1);
printf(“Student’s roll: “);
scanf(“%d”,&roll);
printf(“Student’s name : “);
scanf(“%s”,nam);
printf(“Student’s age : “);
scanf(“%d”,&age);
printf(“\n”);
fprintf(fptr , “%d%s%d”,roll, nam, age);
}
fclose(fptr);
//Displaying detail
FILE *fp;
fp = fopen(“student.txt”,”r”);
while(fscanf(fp,”%d%s%d”,&roll, &nam, &age)!=EOF){
printf(“Student no: “);
printf(“Student’s roll: %d\n”,roll);
printf(“Student’s name :%s\n”,nam);
printf(“Student’s age : %d\n”,age);
}
fclose(fp);
return 0;
}

/* 16.  A datafile named “student.txt” contain name , class and marks 
obtained in three different subject of few students. Write a C program to addmore records until
user press ‘y’ as per user requirement.   */

#include<stdio.h>

#include<string.h>
int main(){
int mark1, mark2, mark3 ,class;
char nam[30],ch[5];
FILE *fptr;
fptr = fopen(“student.txt”, “a”);
printf(“Add more  records ! \n”);
do{
printf(“Enter the name: \n”);
scanf(“%s”,&nam);
printf(“Enter class : \n”);
scanf(“%d”,&class);
printf(“Enter marks obtained in three sub: \n”);
scanf(“%d%d%d”,&mark1,&mark2,&mark3);
fprintf(fptr, “%s\t%d\t%d\t%d\t%d\n”,nam,class,mark1,mark2,mark3);
printf(“Do you want to add more Press ‘Y’ to continue !”);
scanf(“%s”,ch);
}while(strcmp(ch,”Y”)==0 || strcmp(ch,”y”)==0);
fclose(fptr);
return 0;
}

/* 17. WAP to enter roll , name , and age of “n” number of students and display
it based on age using structure.  */

#include<stdio.h>
#include<string.h>
struct students{
int roll, age;
char nam[20];
}n[999];
int main(){
int troll, tage, i , j;
char tnam[20];
int limit;
printf("How many student's detail do you want to store ? \n");
scanf("%d",&limit);
if(limit >= 999)
 {
  printf("MAXIMUM LIMIT REACHED !, ERROR !");
  return 0;
 }
printf("Enter %d student's roll, name and age: \n",limit);
for( i = 1; i<=limit; i++)
{
printf("Student no:%d\n", i);
printf("Student's roll: ");
scanf("%d", &n[i].age);
printf("Student's name: ");
scanf("%s", &n[i].nam);
printf("Student's age: ");
scanf("%d",&n[i].age);
printf("\n");
}

// Now performing the swaping operations
for( i=1;i<=limit;i++)
{
 for(j=i+1;j<=limit;j++)
  {
   if(n[i].age > n[j].age)
    {
     // swaping roll value
      troll = n[i].roll;
      n[i].roll = n[j].roll;
      n[j].roll = troll;
     // swaping the name value
     strcpy(tnam, n[i].nam);
     strcpy(n[i].nam, n[j].nam);
     strcpy(n[j].nam, tnam);
    //swaping the age value
    tage = n[i].age;
    n[i].age = n[j].age;
    n[j].age = tage;
   }
 }
}
// Now, displaying the output

for(i = 1; i<=limit;i++)
{
printf("Student no:%d\n",i);
printf("Student's roll:%d\n",n[i].roll);
printf("Student's name:%s\n",n[i].nam);
printf("Student's age:%d\n", n[i].age);
printf("\n");
}
return 0;
}

// 18. WAP to read 2X2 matrix element and display it.

#include<stdio.h>
int main(){
int i , j , a[2][2];
printf(“Enter 2X2 matrix elements: “);
for(i=1 ;i<=2 ;i++)
 {
   for(j=1 ;j<=2 ;j++)
    {
    scanf(“%d”, &a[i][j]);
    }
 }
for(i=1 ;i<=2 ;i++)
{
    for(j=1 ;j<=2 ;j++)
    {
    printf(“%d\t” , a[i][j]);
    }
    printf(“\n”);
}
return 0;
}

// 19. WAP to read two 2X2 matrix elements then also find it’s Sum.

#include<stdio.h>
int main(){
int i , j , a[2][2] , b[2][2] , s[2][2];
printf(“Enter first 2X2 matrix elements: \n”);
for(i=0 ; i<2; i++)
 {
  for(j=0; j<2; j++)
   {
   scanf(“%d” , &a[i][j]);
   }
 }
printf(“Enter second 2X2 matrix elements: \n”);
for(i=0; i<2; i++)
 {
  for(j=0; j<2; j++)
  {
  scanf(“%d” , &b[i][j]);
  }
 }
for(i=0; i<2; i++)
 {
 for(j=0; j<2; j++)
  {
  s[i][j] = a[i][j] + b[i][j];
  }
}
for(i=0; i<2; i++)
 {
  for(j=0; j<2; j++)
   {
   printf(“%d” , &s[i][j]);
   }
  printf(“\n”);
 }
return 0;
}

/*  20. WAP to store ‘n’ student’s name and marks obtained in 3 subjects & store it in datafile named
“student.txt” of only those students who are passed.[Pass mark : >=34]  */

#include<stdio.h>

int main(){
    int sub1 , sub2 , sub3 , i , limit;
    char nam[30];
    FILE *fptr;
    fptr = fopen(“student.txt” , “w”);
    printf(“How many students detail: \n”);
    scanf(“%d”,&limit);
    printf(“Enter %d student’s name & marks obtained in english, nepali & math : \n”,limit);
    for(i=0 ; i<limit ; i++)

    {

        printf(“Student no.:%d\n”,i+1);
        printf(“Student’s name: “);
        scanf(“%s”,&nam);
        printf(“Marks obtained in english , nepali , & math : “);
        scanf(“%d%d%d”,&sub1, &sub2, &sub3);
        int tot = sub1 + sub2 + sub3;
        if(tot > 34)
        {
            fprintf(fptr , “%s\t%d\t%d\t%d\n”,nam,sub1,sub2,sub3);
        }
    }
    fclose(fptr);
    return 0;
}

// 20. WAP in C to input any two numbers and find the LCM and HCF.

#include<stdio.h>
int main() {
    int num1, num2, lcm, hcf;
    // Taking input from the user
    printf("Enter first number: \n");
    scanf("%d", &num1);
    printf("Enter second number: \n");
    scanf("%d", &num2);
    // Finding HCF using a loop
    for (int i = num1; i >= 1; i--) {
        if (num1 % i == 0 && num2 % i == 0) {
            hcf = i;
            break;
        }
    }
    // Calculating LCM using the relation between HCF and LCM
    lcm = (num1 * num2) / hcf;

    // Printing the results
    printf("LCM of %d and %d is %d\n", num1, num2, lcm);
    printf("HCF of %d and %d is %d\n", num1, num2, hcf);

    return 0;
}

// 21. WAP to check whether the year is leap year or not.

/**
 * C program to check leap year using conditional operator
 */

#include <stdio.h>
int main(){
    int year;
 
    /*
     * Input year from user
     */
    printf("Enter any year: ");
    scanf("%d", &year);

    /*
     * If year%4==0 and year%100!=0 then
     *     print leap year
     * else if year%400==0 then
     *     print leap year
     * else
     *     print common year 
     */
    (year%4==0 && year%100!=0) ? printf("LEAP YEAR") :
        (year%400 ==0 ) ? printf("LEAP YEAR") : printf("COMMON YEAR");

    return 0;
}

or, 

#include <stdio.h>
int main() {
   int year;
   printf("Enter a year: ");
   scanf("%d", &year);

   // leap year if perfectly divisible by 400
   if (year % 400 == 0) {
      printf("%d is a leap year.", year);
   }
   // not a leap year if divisible by 100
   // but not divisible by 400
   else if (year % 100 == 0) {
      printf("%d is not a leap year.", year);
   }
   // leap year if not divisible by 100
   // but divisible by 4
   else if (year % 4 == 0) {
      printf("%d is a leap year.", year);
   }
   // all other years are not leap years
   else {
      printf("%d is not a leap year.", year);
   }
   return 0;
}

// 22. WAP in C to swap the value.

#include <stdio.h>
int main() {
    int num1, num2;
    // Input the first number
    printf("Enter first number: \n");
    scanf("%d", &num1);
    
    // Input the second number
    printf("Enter second number: \n");
    scanf("%d", &num2);
    printf("Before swapping value, the first number is %d and another number is %d\n",num1,num2);
    
    // Swapping the values
    int temp = num1;
    num1 = num2;
    num2 = temp;
    
    // Output the swapped values
    printf("After swapping, the first number is %d and another number is %d\n", num1, num2);
    return 0;
}
// 23. Program to choose the 'n' numbers and find the greatest and smallest number.
#include<stdio.h>
int main(){
    int num[999], max , min, limit;
    printf("How many elements? \n");
    scanf("%d",&limit);
    if(limit >= 999)
    {
        printf("Maximum limit reached !!");
        return 0;
    }
    printf("Now, Enter %d number: \n",limit);
    for(int i=0;i<limit;i++)
    {
        printf("Number:%d\n",i+1);
        scanf("%d",&num[i]);
    }
    min = num[0];
    max = num[0];
    for(int i=1;i < limit;i++)
    {
        if(num[i] > max)
        {
            max = num[i];
        }
        if(num[i] < min)
        {
            min = num[i];
        }
    }
    printf("The greatest number is %d\n",max);
    printf("The smallest number is %d\n",min);
    return 0;
}

// 24. PREDICT THE OUTPUT

Code 1:
#include<stdio.h>
int main(){
int x = 25;
int y = ++x;
if(x==y){
printf("Dark");
} else{
printf("Night");
}
return 0;
}
Output: Simple , the output is 'Dark' , how then? , here you could see in the variable 'y', 'x' is increased through pre-increment process, that
mean the variable 'x' get increased by ++ i.e 1, and then assign the value to 'y'.

Code 2:
#include<stdio.h>

int main(){
    char a = 'B';
    char b = 'A';

    printf("%d",a+b);
    return 0;
}
Output: Ahhh, here the output is 131, how ? Basically, the datatype char we have assign to variable 'a' and 'b' carries ASCII CODE, that 
means B carries 66 and A carries 65, so 66+65 = 131 because during execution the format specifier is %d.


Code 3:
#include<stdio.h>

int main(){
    int f, m, a;

    m = 2;
    a = m++;
    f = m * a;
    printf("%d",f);
    return 0;
}
Output: Here the output is '6' why? Try yourself , this is your task !

// 25. program to input the limit of an element and find the sum of that each number.
Code: 

#include<stdio.h>

int main(){
    int num[99], limit, s=0;
    
    printf("How many element do you want ? \n");
    scanf("%d",&limit);
    
    printf("Enter %d different number: \n",limit);
    for(int i=1;i<=limit;i++)
    {
        printf("Number:%d\n",i);
        scanf("%d",&num[i]);
        s = s + num[i];
        printf("\n");
    }
    printf("The sum of %d number is %d\n",limit,s);
    return 0;
}

// 26.  Program to print the series, 5  10  20  35  60   ... upto 10th term
#include<stdio.h>
int main(){
    int a = 5, b = 10, c;
    printf("%d\t%d\t",a,b);
    for(int i=3;i<=10;i++)
    {
        c = a + b + 5;
        printf("%d\t",c);
        a = b;
        b = c;
    }
    return 0;
}

// 27. Program to input the element of two matix and find the product between them

Code:
#include<stdio.h>
int main(){
    int a[2][2], b[2][2], i, j , k, c[2][2];
    
    //First matrix element
    printf("Enter the element of Matrix 1: \n");
    for(i=0;i<2;i++)
    {
        for(j=0;j<2;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }

    printf("Enter the elements of Matrix2: \n");
    for(i=0;i<2;i++)
    {
        for(j=0;j<2;j++)
        {
            scanf("%d",&b[i][j]);
        }
    }
    //Matrix product operation
    for(i=0;i<2;i++)
    {
        for(j=0;j<2;j++)
        {
            c[i][j] = 0;
            for(k=0;k<2;k++)
            {
                c[i][j] = c[i][j] + a[i][k] * b[k][j];
            }
        }
    }
    //Now displaying
    for(i=0;i<2;i++)
    {
        for(j=0;j<2;j++)
        {
            printf("%d\t",c[i][j]);
        }
        printf("\n");
    }
    return 0;
}

//28. Program to input two matrix and find the sum.

Code:
#include <stdio.h>

int main() {
    int a[2][2], b[2][2], c[2][2], i, j;

    // Input elements for Matrix 1
    printf("Enter the elements of Matrix1: \n");
    for(i = 0; i < 2; i++) {
        for(j = 0; j < 2; j++) {
            scanf("%d", &a[i][j]);  
        }
    }

    // Input elements for Matrix 2
    printf("Enter the elements of Matrix2: \n");
    for(i = 0; i < 2; i++) {
        for(j = 0; j < 2; j++) {
            scanf("%d", &b[i][j]);
        }
    }

    // Matrix addition operation
    for(i = 0; i < 2; i++) {
        for(j = 0; j < 2; j++) {
            c[i][j] = a[i][j] + b[i][j];
        }
    }

    // Displaying the result matrix
    printf("The addition matrix is: \n");
    for(i = 0; i < 2; i++) {
        for(j = 0; j < 2; j++) {
            printf("%d\t", c[i][j]);
        }
        printf("\n");
    }

    return 0;
}

Function problems: 


/* 29. Program to take two numbers and print the number from first value to second value using function */
#include<stdio.h>
void number(int num1, int num2)
{
    printf("Number from %d to %d is: \n",num1, num2);
    for(int i=num1;i<=num2;i++)
    {
        printf("%d\t",i);
    }
}
int main(){
    int num1, num2;
    printf("Enter first number: \n");
    scanf("%d",&num1);
    printf("Enter second number: \n");
    scanf("%d",&num2);
    number(num1, num2);
    return 0;
}

// 30. Program to input the value of radius and find the area of circle using function.

Code: 
#include<stdio.h>
void area(float r)
{
    float ar = 3.14 * r * r;
    printf("The area of a circle is %.2f",ar);
}
int main(){
    float ar, r;
    printf("Enter the value of radius: \n");
    scanf("%f",&r);
    area(r);
    return 0;
}

   or, 
     Using arguement plus with return type

Code:
#include<stdio.h>
float area(float r)
{
    float ar = 3.14 * r * r;
    return ar;
}
int main(){
    float r;
    printf("Enter the value of radius: \n");
    scanf("%f",&r);
    printf("The area of a circle is %.2f",area(r));
    return 0;
}

// 31. program to display the smallest number from two numbers using function.

Code:
#include<stdio.h>
void check(int num1, int num2)
{
    int min;
    if(num1 < num2)
    {
        min = num1;
    }
    else{
        min = num2;
    }
    printf("The smallest number is %d",min);
}
int main(){
    int num1, num2;
    printf("Enter first number: \n");
    scanf("%d",&num1);

    printf("Enter second number: \n");
    scanf("%d",&num2);

    check(num1,num2);
    return 0;
}

// 32. Program to input any number and find the reverse of those number using function.

Code:
#include<stdio.h>
int number(int num)
{
int r, c, s=0;
c = num;
while(num>0)
  {
r = num % 10;
s = (s*10)+r;
num = num/10;
  }
return s;
}
int main(){
int num;

printf("Enter the number: ");
scanf("%d",&num);

printf("The reverse of %d is %d",num,number(num));
return 0;
}

// 33. Program to input number and display it's multiplication table using function.

Code:
#include<stdio.h>
int table(int num, int i)
{
 return num*i;   
}
int main(){
    int num;
    printf("Enter number: \n");
    scanf("%d",&num);
    printf("The table of %d is: \n");
    for(int i=1;i<=10;i++)
    {
        printf("%dX%d=%d\n",num,i,table(num,i));
    }
    return 0;
}

//34. Create a function that takes an array and sort the elements in ascending order.

Code:
#include <stdio.h>

void number(int num[], int limit) 
{
    int i, j, temp;
    /*limit - 1 is needed because each pass places one element correctly, reducing required passes */
    for (i = 0; i < limit - 1; i++) 
    {
        for (j = i + 1; j < limit; j++) 
        {
            if (num[i] > num[j]) 
            {
                temp = num[i];
                num[i] = num[j];
                num[j] = temp;
            }
        }
    }
    printf("=== After sorting ===\n");
    for (i = 0; i < limit; i++) 
    {
        printf("%d\t", num[i]);
    }
    printf("\n");
}

int main() 
{
    int num[999], limit, i;
    
    printf("How many numbers?\n");
    scanf("%d", &limit);

    printf("Enter %d numbers:\n", limit);
    for (i = 0; i < limit; i++) 
    {
        printf("Number %d: ", i + 1);
        scanf("%d", &num[i]);
    }
    number(num, limit);

    return 0;
}

/* 35. Create a function that takes and array & return it's maximum value. */

#include<stdio.h>
int max_value(int num[],int limit)
{
    int max;
    max = num[0];
    for(int i=1;i<=limit;i++)
    {
        if(num[i] > max)
        {
            max = num[i];
        }
    }
    return max;
}
int main(){
    int num[99], limit, i;
    printf("How many number: ?\n");
    scanf("%d",&limit);
    printf("Enter %d number:\n",limit);
    for(i=0;i<limit;i++)
    {
        printf("Number:%d\n",i+1);
        scanf("%d",&num[i]);
    }
    printf("The greatest number is %d\n", max_value(num,limit));
    return 0;
}

// 36. Program to input the words and check whether it is palindrome or not .

Code:
#include <stdio.h>
#include <string.h>

int main() {
    char w[20], d[20];

    printf("Enter the word: \n");
    scanf("%s", w);  

    strcpy(d, w);  
    strrev(d);       

    if (strcmp(w, d) == 0)
        printf("Palindrome\n");
    else
        printf("Not\n");

    return 0;
}

// 37. Program to find the factorial of a number using recursion. 

Code:
#include<stdio.h>
int fact(int num)
{
    if(num<=1)
    return 1;
    else
    return num*fact(num-1);
}
int main(){
    int num;
    printf("Enter the number: \n");
    scanf("%d",&num);
    printf("The factorial of %d is %d",num, fact(num));
}

//38. Program to input the terms and display the fibonacci series using recursion.

Code:

#include <stdio.h>

int fibonacci(int n) {
    if (n == 0)
        return 0;
    else if (n == 1)
        return 1;
    else
        return fibonacci(n - 1) + fibonacci(n - 2);
}

int main() {
    int n, i;
    
    printf("Enter the number of terms: ");
    scanf("%d", &n);

    printf("Fibonacci Series: ");
    for (i = 0; i < n; i++) {
        printf("%d ", fibonacci(i));
    }

    printf("\n");
    return 0;
}

//39. Program to input any two numbers and find it's sum using pointer.

Code:

#include<stdio.h>
int main(){
    
    int num1, num2;
    int *p = &num1, *q = &num2;
    
    printf("Enter two numbers: \n");
    scanf("%d%d",&num1,&num2);
    int sum = *p + *q;
    
    printf("The sum of %d and %d is %d\n",*p,*q,sum);
    return 0;
    
}

//40. WAP to input any 5 numbers in an array and find the smallest and the biggest numbers using pointer.

Code:
#include <stdio.h>

int main() {
    int num[5], min, max;
    int *p;  // Pointer declaration

    printf("Enter 5 different numbers: \n");
    for (int i = 0; i < 5; i++) {
        printf("Number %d: ", i + 1);
        scanf("%d", &num[i]);  // Store directly using array indexing
    }

    p = num;  // Point to the first element
    min = max = *p;  // Initialize min and max with the first element

    for (int i = 1; i < 5; i++) {
        p++;  // Move pointer to the next element
        if (*p > max) {
            max = *p;
        }
        if (*p < min) {
            min = *p;
        }
    }
    printf("Smallest number: %d\n", min);
    printf("Biggest number: %d\n", max);

    return 0;
}

//41. WAP to input any number & check whether the number is odd or even taking void check(n) function type.

Code:
#include<stdio.h>
void check(int n)
{
    if(n % 2 ==0)
    {
        printf("The number %d is even",n);
    }
    else{
        printf("The number %d is odd",n);
    }
}
int main(){
    int n;
    printf("Enter the number: \n");
    scanf("%d",&n);
    check(n);
    return 0;
}

//42. WAP to input any two numbers and find the smallest number between them using 4th type of function.

Code:
#include<stdio.h>
int small(int a, int b)
{
    int min;
    if(a < b)
    {
        min = a;
    }
    else{
        min = b;
    }
    return min;
}
int main(){
    int a, b;
    printf("Enter two numbers: \n");
    scanf("%d%d",&a,&b);
    printf("The smallest number is %d",small(a,b));
    return 0;
}

//43. WAP to take any one integer and find the sum upto that number using function.

Code:
#include<stdio.h>
void sum(int num)
{
    int s = 0;
    for(int i=1;i<=num;i++)
    {
        s = s + i;
    }
    printf("The sum upto %d digits is %d",num,s);
}
int main(){
    int num;
    printf("Enter the number: \n");
    scanf("%d",&num);
    sum(num);
    return 0;
}

//44. WAP to take an int array as argument & return the smallest value in the array.

Code:
#include<stdio.h>
int number(int num[])
{
    int min,i;
    min = num[0];
    for(i=1;i<5;i++)
    {
        if(num[i] < min)
        {
            min = num[i];
        }
    }
    return min;
}
int main(){
    int num[5];
    printf("Enter 5 different numbers: \n");
    for(int i=0;i<5;i++)
    {
        printf("Number:%d\n",i+1);
        scanf("%d",&num[i]);
    }
    printf("The smallest number is %d",number(num));
    return 0;
}



//45. WAP to take any integers and find the sum of it's digits using function.

COde:
#include<stdio.h>
void sum(int num)
{
    int r , c , s=0;
    c = num;
    while(num>0)
    {
        r = num%10;
        s = s + r;
        num = num/10;
    }
    printf("The sum of each digits of %d is %d",c,s);
}
int main(){
    int num;
    printf("Enter the integer: \n");
    scanf("%d",&num);
    sum(num);
    return 0;
}

//46. WAP to input any number and find the factorial of a number using recursion function.

Code:

#include<stdio.h>
int fact(int num)
{
    if(num<=1)
    {
        return 1;
    }
    else
    return num*fact(num-1);
}
int main(){
    int num;
    printf("Enter the number: \n");
    scanf("%d",&num);
    printf("The factorial of %d is %d",num,fact(num));
    return 0;
}
//47. WAP to display the first 10 fibonacci series using recursive function.

Code:
#include <stdio.h>

int fibo(int n) {
    if (n == 0)
        return 0;
    else if (n == 1)
        return 1;
    else
        return fibo(n - 1) + fibo(n - 2);
}

int main() {

    printf("Fibonacci Series: ");
    
    for (int i = 0; i < 10; i++) {
        printf("%d ", fibo(i));
    }

    printf("\n");
    return 0;
}

//48. WAP to input any three words and find the shortest words.

Code:

#include<stdio.h>
#include<string.h>

int main(){
    char w1[20], w2[20], w3[20];
    
    printf("Enter 3 different words: \n");
    scanf("%s%s%s",w1,w2,w3);
    
    char shortest[20];
    strcpy(shortest,w1);
    if(strlen(w2) < strlen(shortest)){
        strcpy(shortest, w2);
    }
    if(strlen(w3) < strlen(shortest)){
        strcpy(shortest, w3);
    }
    printf("The smallest word is %s",shortest);
    return 0;
    
}

//49. WAP to input any word & check whether the word is palindrome or not.

#include <stdio.h>
#include <string.h>

int main() {
    char word[50], reversed[50];
    
    // Input the word
    printf("Enter a word: ");
    scanf("%s", word);
    
    // Copy and reverse the word
    strcpy(reversed, word);
    strrev(reversed);
    
    // Check if palindrome
    if(strcmp(word, reversed) == 0) {
        printf("%s is a palindrome.\n", word);
    } else {
        printf("%s is not a palindrome.\n", word);
    }
    
    return 0;
}

//50. WAP to display the following series.

a. 

  P
 EPA
NEPAL

Code:
#include <stdio.h>
#include <string.h>

int main() {
    char w[] = "NEPAL";
    int length = strlen(w);
    
    for (int i = length - 3; i < length; i++) {
        // Print spaces
        for (int j = 0; j < length - i - 1; j++) {
            printf(" ");
        }
        // Print characters from index (length - i - 1) to i
        for (int k = length - i - 1; k <= i; k++) {
            printf("%c", w[k]);
        }
        printf("\n");
    }
    
    return 0;
}

b.
N
NE
NEP
NEPA
NEPAL

Code:
#include<stdio.h>
int main(){
    char w[] = "NEPAL";
    int i, j;
    for(i=0;i<5;i++)
    {
        for(j=0;j<=i;j++)
        {
            printf("%c",w[j]);
        }
        printf("\n");

    }
    return 0;
}

C.
KATHMANDU
 KATHMAN
  KATHM
   KAT
    K

Code:

#include <stdio.h>
#include <string.h>

int main() {
    char w[] = "KATHMANDU";
    int length = strlen(w);

    for (int i = 0; i < 5; i++) {
        // Print spaces
        for (int j = 0; j < i; j++) {
            printf(" ");
        }

        // Print characters
        for (int k = 0; k < length - (2 * i); k++) {
            printf("%c", w[k]);
        }

        printf("\n");
    }

    return 0;
}

//51. WAP to input 5 different countries name and sort them in alphabetical order.

Code:
#include <stdio.h>
#include <string.h>

int main() {
    char countries[5][50];
    char temp[50];
    int i, j;

    printf("Enter names of 5 different countries:\n");
    for(i = 0; i < 5; i++) {
        printf("Country %d: ", i + 1);
        scanf("%s", countries[i]);
    }

    for(i = 0; i < 4; i++) {
        for(j = i + 1; j < 5; j++) {
            if(strcmp(countries[i], countries[j]) > 0) {
                strcpy(temp, countries[i]);
                strcpy(countries[i], countries[j]);
                strcpy(countries[j], temp);
            }
        }
    }
  
    printf("\nCountries in Ascending Order:\n");
    for(i = 0; i < 5; i++) {
        printf("%s\t", countries[i]);
    }

    return 0;
}

//52. WAP to input the details of 'n' books (book's price , book's page, book's author) using structure and display it arranging  on the basis of price.

Code:
#include<stdio.h>
#include<string.h>
struct book_detail{
    int book_price, book_page;
    char book_author[20], book_nam[20];
}n[999];
int main(){
    
    int tbook_price, tbook_page;
    char tbook_author[20], tbook_nam[20];
    int limit;

    printf("How many book detail do you want to store ? \n");
    scanf("%d",&limit);
    printf("Enter %d book's name, author, price and page \n",limit);
    for(int i=0;i<limit;i++)
    {
        printf("Book no:%d\n",i+1);
        printf("Book's name: ");
        scanf("%s",&n[i].book_nam);
        printf("Book's author: ");
        scanf("%s",&n[i].book_author);
        printf("Book's price: ");
        scanf("%d",&n[i].book_price);
        printf("Book's page: ");
        scanf("%d",&n[i].book_page);
        printf("\n");

    }
    for(int i=0;i<limit;i++)
    {
        for(int j=i+1;j<limit;j++)
        {
            if(n[i].book_price > n[j].book_price)
            {
                //swapping price value
                tbook_price = n[i].book_price;
                n[i].book_price = n[j].book_price;
                n[j].book_price = tbook_price;

                //swapping page value
                tbook_page = n[i].book_page;
                n[i].book_page = n[j].book_page;
                n[j].book_page = tbook_page;

                //swapping author value
                strcpy(tbook_author, n[i].book_author);
                strcpy(n[i].book_author, n[j].book_author);
                strcpy(n[j].book_author, tbook_author);

                //swapping name value
                strcpy(tbook_nam, n[i].book_nam);
                strcpy(n[i].book_nam,n[j].book_nam);
                strcpy(n[j].book_nam,tbook_nam);
            }
        }

    }
    printf("===After swapping value ===\n");
    for(int i=0;i<limit;i++)
    {
        printf("Book no:%d\n",i+1);
        printf("Book's name: %s\n",n[i].book_nam);
        printf("Book's author: %s\n",n[i].book_author);
        printf("Book's price: %d\n",n[i].book_price);
        printf("Book's page: %d\n",n[i].book_page);
        printf("\n");
    }
    return 0;
    
}

//53. WAP to input the name, faculty and age of n number of students using structure using DMA techniques.

Code:

#include <stdio.h>
#include <stdlib.h>

struct Student {
    char name[50];
    char faculty[50];
    int age;
};

int main() {
    int limit;
    printf("Enter the number of students: ");
    scanf("%d", &limit);
    struct Student *students = (struct Student *)malloc(limit * sizeof(struct Student));

    for (int i = 0; i < limit; i++) {
        printf("\nEnter details for student %d:\n", i + 1);
        printf("Name: ");
        scanf(" %s", students[i].name);  
        printf("Faculty: ");
        scanf(" %s", students[i].faculty);
        printf("Age: ");
        scanf("%d", &students[i].age);
        printf("\n");
    }
    printf("Student Details:\n");
    for (int i = 0; i < limit; i++) {
        printf("\nStudent %d:\n", i + 1);
        printf("Name: %s\n", students[i].name);
        printf("Faculty: %s\n", students[i].faculty);
        printf("Age: %d\n", students[i].age);
    }

    free(students);

    return 0;
}


/* 54.Create an array of structure to store name, faculty and age of 5 students and print only those who study in BIM*/
#include<stdio.h>
#include<string.h>
struct student{
    int age;
    char nam[20], fac[20];
}n[5];
int main(){
    printf("Enter 5 different student's name, age  and faculty: \n");
    for(int i=0;i<5;i++)
    {
        printf("Student no:%d\n",i+1);
        printf("Student's name: ");
        scanf("%s",n[i].nam);
        printf("Student's age: ");
        scanf("%d",&n[i].age);
        printf("Student's faculty: ");
        scanf("%s",n[i].fac);
        printf("\n");
    }
    printf("===Students who study BIM===\n");
    for(int i=0;i<5;i++)
    {
        if(strcmp(n[i].fac,"BIM")==0)
        {
            printf("Student no:%d\n",i+1);
            printf("Student's name:%s\n",n[i].nam);
            printf("Student's age:%d\n",n[i].age);
            printf("Student's faculty:%s\n",n[i].fac);
            printf("\n");
        }
    }
    return 0;
}

//55. WAP to input the name, age anf faculty of 5 different students and display the details of only those student whose name starts with 'A' using structure.

Code:

#include <stdio.h>
#include <string.h>

struct student {
    int age;
    char nam[20], fac[20];
} n[5];

int main() {
    printf("Enter 5 different students' name, age, and faculty:\n");

    for (int i = 0; i < 5; i++) {
        printf("Student no: %d\n", i + 1);
        printf("Student's name: ");
        scanf("%19s", n[i].nam);
        printf("Student's age: ");
        scanf("%d", &n[i].age);
        printf("Student's faculty: ");
        scanf("%19s", n[i].fac);
        printf("\n");
    }

    printf("=== Students whose name starts with 'A' ===\n");
    for (int i = 0; i < 5; i++) {
        if (n[i].nam[0] == 'A' || n[i].nam[0] == 'a') { 
            printf("Student no: %d\n", i + 1);
            printf("Student's name: %s\n", n[i].nam);
            printf("Student's age: %d\n", n[i].age);
            printf("Student's faculty: %s\n", n[i].fac);
            printf("\n");
        }
    }

    return 0;
}

//56. From the same above program, WAP to display the detail of only teenagers groups 

Code:
#include <stdio.h>
#include <string.h>

struct student {
    int age;
    char nam[20], fac[20];
} n[5];

int main() {
    printf("Enter 5 different students' name, age, and faculty:\n");

    for (int i = 0; i < 5; i++) {
        printf("Student no: %d\n", i + 1);
        printf("Student's name: ");
        scanf("%19s", n[i].nam);
        printf("Student's age: ");
        scanf("%d", &n[i].age);
        printf("Student's faculty: ");
        scanf("%19s", n[i].fac);
        printf("\n");
    }

    printf("=== Students who are teenagers (13-19 years old) ===\n");
    for (int i = 0; i < 5; i++) {
        if (n[i].age >= 13 && n[i].age <= 19) {
            printf("Student no: %d\n", i + 1);
            printf("Student's name: %s\n", n[i].nam);
            printf("Student's age: %d\n", n[i].age);
            printf("Student's faculty: %s\n", n[i].fac);
            printf("\n");
        }
    }

    return 0;
}

//57. From the same above code, WAP to input 5 student's detail and display the detail of the youngest student

Code:
#include <stdio.h>
#include <string.h>

struct student {
    int age;
    char nam[20], fac[20];
} n[5];

int main() {
    printf("Enter 5 different students' name, age, and faculty:\n");

    for (int i = 0; i < 5; i++) {
        printf("Student no: %d\n", i + 1);
        printf("Student's name: ");
        scanf("%19s", n[i].nam);
        printf("Student's age: ");
        scanf("%d", &n[i].age);
        printf("Student's faculty: ");
        scanf("%19s", n[i].fac);
        printf("\n");
    }
    int smallest = n[0].age;
    for (int i = 1; i < 5; i++) {
        if (n[i].age < smallest) {
            smallest = n[i].age;
        }
    }

    printf("=== Detail of youngest student(s) ===\n");
    for (int i = 0; i < 5; i++) {
        if (n[i].age == smallest) {  
            printf("Student no: %d\n", i + 1);
            printf("Student's name: %s\n", n[i].nam);
            printf("Student's age: %d\n", n[i].age);
            printf("Student's faculty: %s\n", n[i].fac);  
            printf("\n");
        }
    }

    return 0;
}

//58. Program to find the output:

i. #include<stdio.h>
int main(){
    int x = 70;
    int y = x--;
    printf("X=%d\tY=%d",x,y);
    return 0;
}

Output => X=69  Y=70  => Reason is due to post-decrement, y = x-- means y is assigned the value of x before decrement so y=70 initially 
After that x is decremented by 1, making x = 69.


  


Hold on , Content on progress !!





